** Overview **

Poker is a commonly-played card game in which players try to assemble the "best" possible hand with the cards that they are given. Poker is most frequently played with a 52-card deck and up to 10 players. There are also multiple branches of Poker, and of these branches the focus of our project is on Five Card Draw.

Our goal in this project is to develop our own implementation of Five Card Draw (with a working multiplayer), which is a branch of Poker where at the start of a match, players are initially dealt five cards. From here, five completed "rounds" (a round referring to a full rotation of actions) need to take place before the match is finished. There are two types of rounds: discard rounds and wager rounds. After being dealt the first five cards, players take turns wagering, then discarding, then wagering again, then discarding again, and then wagering for the last time.

In the discard round, players are permitted to select up to 5 cards and replace them for a new set of cards from the deck. The victory condition of the game is to obtain a hand that is considered stronger than the hands of the other players by the end of the match. Hands are ranked in order of strength from least to greatest by the following measure: high card, one pair of the same number, two pairs of two different numbers, three-of-a-kind, straight (five cards in ascending order), flush (five cards of the same suit), a full house (a three-of-a-kind with a pair), four-of-a-kind, straight flush (a straight combined with a flush), and royal flush (a flush where the cards are numbered 10 to Ace).

In wager rounds, each player takes turns deciding whether they want to wager as much as is already on the board (Call), wager more than what is currently on the board (Raise), or forfeit their hand and any chance of winning the match (Fold). A Call is done to match an existing bet so that the player can stay in for another set of turns, while a Raise is done to try and increase the amount of money at stake on the board. Folding is done if a player does not want to  put any more money into the round.

When all of the rounds have finished, players reveal their hands, and the player with the best hand takes all of the money that has been wagered.

** Technologies / Implementation **

For this project, we utilized several different technologies to implement the features described in the next section.

HTML and CSS were used to design the webpages and put static content such as text, buttons, and images on the page. These designs were later converted into Go templates to be displayed as dynamic pages to the user. With Javascript, we were also able to add functionality to our application's lobby system so that users could leave and join rooms.

The Go programming language was used extensively for the backend implementation. The handlers and function calls were written up in Go, as was the Five Card Draw game logic. Some of the Go handlers also make SQL queries to the database to update or fetch necessary information. For example, when a user successfully registers an account, the database will have a new entry that contains the username, password, and profile picture of that player. 

Although our final implementation will use PostgreSQL as a database, we have been using SQLite during the development process. SQL user tables exist for handling login sessions made by users (authentication), registering new accounts, existing user accounts and user details such as their name and password, and keeping track of user statistics (leaderboards). 

** Features **

In our application, we intend to include a number of features which simulate what an implementation of Five Card Draw might look like.

*User Profiles*: An authentication system will be in place so that users can properly log in to play Five Card Draw and log out when they are done with their session. Users should be able to register an account, and those who create an account will have their own user profile in which they can display and edit basic information such as their name and profile picture. Each user account will also start off by default with a set amount of money which they can use to participate in matches. In addition, each player is associated with lifetime statistics such as wins and losses which will be displayed in the leaderboard as described below.

*Lobby System*: Our application displays a list of existing lobbies and permits the user to create a lobby of their own, as shown in Figure 1. The list of lobbies is not a static page and constantly updates itself to show users what rooms are available.

*Gameplay*: The gameplay itself can be split up into several aspects, including the game logic, the timer, and the AI. In the Overview, we discussed the manner in which Five Card Draw is played, and in our application we have written code in Go that directly handles the sequence of turns, actions that can be taken (i.e. discard rounds and wager rounds), and determining who the victor of a match is. A timer will also prevent players from taking an indefinite period of time to make a move, and the AI will be able to follow the rules of Five Card Draw at a bare minimum. Figure 2 shows what a match of Five Card Draw would look like in our application.

Each player joins a table with six seats to join a poker game. 
Each game has a specific ante (blinds might be added), a minimum bet value, and maximum bet value. 
At the beginning of a round of Five Card Draw, each player pays the ante value, which is added to the “pot”. Next, each player is dealt 5 cards face down. Each computer displays, on its screen, the cards belonging the player playing from it.
After all players have examined their hands, betting begins starting from the “dealers” left. 
Each player may choose to “call” the current bet by matching the bet of the previous player, “raise” the current bet by the max-bet or less, or “fold”, whereby the player cuts her losses and withdrawals from that round. 
Betting continues to go around the table until each player has either passed or folded. All bets are added to the pot.

If more than one player remains after the first round of betting, each player may choose to discard a subset of the cards in her hand. 
The dealer then deals new cards to replace those which were discarded. Upon examining the updated hands, players begin a new round of betting as before. 
If more than one player remans after the second round of betting, a second discard and replace phase occurs, followed by a third and final betting phase. 
After the final bets are made, the pot is awarded to the player with the strongest hand. 



*Multiplayer*: Five Card Draw is a game meant to be played with multiple other people, so being able to connect with others would be an expected part of our application. At the moment, we are trying to implement a version of Five Card Draw that supports up to 6 simultaneous players at once per lobby.

*Leaderboard*: A leaderboard exists that keeps track of user statistics. In this case, user statistics refer to information collected about a player's performance during their account's lifetime, such as the number of wins, losses, draws, folds, and amount of money held by that user. These statistics are obtained after the conclusion of each Poker match, and then the leaderboard is updated to reflect the changes in the player's performance.

** Conclusion **

This project is an attempt to simulate a version of poker for up to 6 players using the Go language. Our original plan was to use the Django framework, but we felt that Go was better equipped to handle the real-time updates that were necessary as part of the game logic and the lobby updates. The main obstruction of our application was getting each page to work with one another (setting up the handlers).

There are many other ways in which the implementation could have been carried out, such as trying to imitate a style of poker other than five-card draw(i.e. Texas Hold'Em) or using a programming language other than Go. If we were to try and update our application to include more features, a good starting point might be a more-sophisticated AI that could play five-card draw in place of a human player.